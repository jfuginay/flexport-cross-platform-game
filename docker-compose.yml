version: '3.8'

services:
  # Container 1: Main Game Server with React Frontend
  game-server:
    build:
      context: ./flexport-3d
      dockerfile: Dockerfile
    container_name: flexport-game-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - REACT_APP_AI_SERVICE_URL=http://ai-service:5000
      - REACT_APP_ANALYTICS_URL=http://analytics-service:8080
    volumes:
      - ./flexport-3d:/app
      - /app/node_modules
    networks:
      - flexport-network
    depends_on:
      - redis
      - postgres

  # Container 2: AI Player Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: flexport-ai-service
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://flexport:flexport@postgres:5432/flexport
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./ai-service:/app
    networks:
      - flexport-network
    depends_on:
      - redis
      - postgres

  # Container 3: Real-time Analytics Service
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    container_name: flexport-analytics-service
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://flexport:flexport@postgres:5432/flexport
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./analytics-service:/app
      - /app/node_modules
    networks:
      - flexport-network
    depends_on:
      - redis
      - postgres

  # Redis for real-time data and caching
  redis:
    image: redis:7-alpine
    container_name: flexport-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - flexport-network

  # PostgreSQL for persistent data
  postgres:
    image: postgres:15-alpine
    container_name: flexport-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=flexport
      - POSTGRES_PASSWORD=flexport
      - POSTGRES_DB=flexport
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - flexport-network

networks:
  flexport-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: